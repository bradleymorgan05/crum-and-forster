{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitingcold\\\\Documents\\\\Development\\\\policy-crud\\\\pages\\\\dashboard-nx.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Growl } from 'primereact/growl';\nimport { Calendar } from 'primereact/calendar';\nimport Dashboard from './dashboard';\nimport axios from 'axios'; //import {CarService} from '../service/CarService';\n\nconst baseUrl = 'http://127.0.0.1:4000/';\n\nclass DashboardNX extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"postData\", () => {\n      console.log(this.state.data);\n      axios.post(`${baseUrl}policies`, this.state.data).then(res => {\n        console.log(res);\n        console.log(111); //console.log(res.data);\n      });\n    });\n\n    this.state = {\n      data: []\n    };\n    this.textEditor = this.textEditor.bind(this);\n    this.calendarEditor = this.calendarEditor.bind(this);\n    this.yearEditor = this.yearEditor.bind(this);\n    this.brandEditor = this.brandEditor.bind(this);\n    this.colorEditor = this.colorEditor.bind(this);\n    this.requiredValidator = this.requiredValidator.bind(this);\n    this.editorForRowEditing = this.editorForRowEditing.bind(this);\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\n    this.onRowEditInit = this.onRowEditInit.bind(this);\n    this.onRowEditSave = this.onRowEditSave.bind(this);\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\n  }\n\n  async componentDidMount() {\n    const res = fetch(`${baseUrl}policies`).then(r => r.json()).then(data => this.setState({\n      data: data\n    }));\n  }\n  /* Cell Editing */\n\n\n  onEditorValueChange(props, value) {\n    let updatedData = [...props.value];\n    updatedData[props.rowIndex][props.field] = value;\n    this.setState({\n      data: updatedData\n    });\n  }\n\n  inputTextEditor(props, field) {\n    return __jsx(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChange(props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    });\n  }\n\n  textEditor(props) {\n    console.log(props);\n    this.postData();\n    return this.inputTextEditor(props, props.field);\n  }\n\n  calendarEditor(props) {\n    return __jsx(Calendar, {\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChange(props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }\n    });\n  }\n\n  yearEditor(props) {\n    // console.log('fields->>>>>>',props.field)\n    return this.inputTextEditor(props, 'year');\n  }\n\n  brandEditor(props) {\n    let brands = [{\n      label: 'Audi',\n      value: 'Audi'\n    }, {\n      label: 'BMW',\n      value: 'BMW'\n    }, {\n      label: 'Fiat',\n      value: 'Fiat'\n    }, {\n      label: 'Ford',\n      value: 'Ford'\n    }, {\n      label: 'Honda',\n      value: 'Honda'\n    }, {\n      label: 'Jaguar',\n      value: 'Jaguar'\n    }, {\n      label: 'Mercedes',\n      value: 'Mercedes'\n    }, {\n      label: 'Renault',\n      value: 'Renault'\n    }, {\n      label: 'VW',\n      value: 'VW'\n    }, {\n      label: 'Volvo',\n      value: 'Volvo'\n    }];\n    return __jsx(Dropdown, {\n      value: props.value[props.rowIndex].brand,\n      options: brands,\n      onChange: e => this.onEditorValueChange(props, e.value),\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Select a City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    });\n  }\n\n  colorEditor(props) {\n    return this.inputTextEditor(props, 'color');\n  }\n\n  requiredValidator(props) {\n    let value = props.rowData[props.field];\n    return value && value.length > 0;\n  }\n  /* Row Editing */\n\n\n  onEditorValueChangeForRowEditing(props, value) {\n    let updatedCars = [...props.value];\n    updatedCars[props.rowIndex][props.field] = value;\n    this.setState({\n      cars2: updatedCars\n    });\n  }\n\n  editorForRowEditing(props, field) {\n    return __jsx(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChangeForRowEditing(props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }\n    });\n  }\n\n  onRowEditorValidator(rowData) {\n    let value = rowData['brand'];\n    return value.length > 0;\n  }\n\n  onRowEditInit(event) {\n    this.clonedCars[event.data.vin] = _objectSpread({}, event.data);\n  }\n\n  onRowEditSave(event) {\n    if (this.onRowEditorValidator(event.data)) {\n      delete this.clonedCars[event.data.vin];\n      this.growl.show({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Car is updated'\n      });\n    } else {\n      this.growl.show({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Brand is required'\n      });\n    }\n  }\n\n  onRowEditCancel(event) {\n    let cars = [...this.state.cars2];\n    cars[event.index] = this.clonedCars[event.data.vin];\n    delete this.clonedCars[event.data.vin];\n    this.setState({\n      cars2: cars\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 20\n      }\n    }, __jsx(\"a\", {\n      title: \"New Policy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, \"Create new policy\")), __jsx(\"div\", {\n      className: \"content-section implementation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, __jsx(Growl, {\n      ref: el => this.growl = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"Cell Editing\"), __jsx(DataTable, {\n      value: this.state.data,\n      editable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, __jsx(Column, {\n      field: \"first_name\",\n      header: \"first_name\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"last_name\",\n      header: \"last_name\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"email_address\",\n      header: \"email_address\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"phone_number\",\n      header: \"phone_number\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"company_name\",\n      header: \"company_name\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"effective_date\",\n      header: \"effective_date\",\n      editor: this.calendarEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default DashboardNX;","map":{"version":3,"sources":["C:/Users/bitingcold/Documents/Development/policy-crud/pages/dashboard-nx.js"],"names":["Link","React","Component","fetch","DataTable","Column","InputText","Dropdown","Growl","Calendar","Dashboard","axios","baseUrl","DashboardNX","constructor","console","log","state","data","post","then","res","textEditor","bind","calendarEditor","yearEditor","brandEditor","colorEditor","requiredValidator","editorForRowEditing","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","componentDidMount","r","json","setState","onEditorValueChange","props","value","updatedData","rowIndex","field","inputTextEditor","rowData","e","target","postData","brands","label","brand","width","length","onEditorValueChangeForRowEditing","updatedCars","cars2","event","clonedCars","vin","growl","show","severity","summary","detail","cars","index","render","el","height"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport React, { Component } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Growl} from 'primereact/growl';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport Dashboard from './dashboard';\r\nimport axios from 'axios';\r\n//import {CarService} from '../service/CarService';\r\nconst baseUrl = 'http://127.0.0.1:4000/';\r\n\r\nclass DashboardNX extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\t\t\t\t\tdata: []\r\n        };\r\n\t\t\t\r\n        this.textEditor = this.textEditor.bind(this);\r\n        this.calendarEditor = this.calendarEditor.bind(this);\r\n        this.yearEditor = this.yearEditor.bind(this);\r\n        this.brandEditor = this.brandEditor.bind(this);\r\n        this.colorEditor = this.colorEditor.bind(this);\r\n        this.requiredValidator = this.requiredValidator.bind(this);\r\n\r\n        this.editorForRowEditing = this.editorForRowEditing.bind(this);\r\n        this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n        this.onRowEditInit = this.onRowEditInit.bind(this);\r\n        this.onRowEditSave = this.onRowEditSave.bind(this);\r\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\t\t\t\tconst res = fetch(`${baseUrl}policies`).then( r => r.json() ).then(data => this.setState({data: data}));\r\n    }\r\n\r\n    /* Cell Editing */\r\n    onEditorValueChange(props, value) {\r\n        let updatedData = [...props.value];\r\n        updatedData[props.rowIndex][props.field] = value;\r\n        this.setState({data: updatedData});\r\n    }\r\n\r\n    inputTextEditor(props, field) {\r\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\r\n    }\r\n\r\n    textEditor(props) {\r\n\t\t\tconsole.log(props)\r\n\t\t\tthis.postData()\r\n      return this.inputTextEditor(props, props.field);\r\n\t}\r\n\t\t\r\n\t\tpostData = () => {\r\n\t\t\tconsole.log(this.state.data)\r\n\t\t\taxios.post(`${baseUrl}policies`, this.state.data)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(111);\r\n\t\t\t\t//console.log(res.data);\r\n\t\t\t})\r\n\t}\r\ncalendarEditor(props){\r\n    return <Calendar value={props.rowData[field]}  onChange={(e) => this.onEditorValueChange(props, e.target.value)}></Calendar>\r\n}\r\n    yearEditor(props) {\r\n        // console.log('fields->>>>>>',props.field)\r\n        return this.inputTextEditor(props, 'year');\r\n    }\r\n\r\n\r\n    brandEditor(props) {\r\n        let brands = [\r\n            {label: 'Audi', value: 'Audi'},\r\n            {label: 'BMW', value: 'BMW'},\r\n            {label: 'Fiat', value: 'Fiat'},\r\n            {label: 'Ford', value: 'Ford'},\r\n            {label: 'Honda', value: 'Honda'},\r\n            {label: 'Jaguar', value: 'Jaguar'},\r\n            {label: 'Mercedes', value: 'Mercedes'},\r\n            {label: 'Renault', value: 'Renault'},\r\n            {label: 'VW', value: 'VW'},\r\n            {label: 'Volvo', value: 'Volvo'}\r\n        ];\r\n\r\n        return (\r\n            <Dropdown value={props.value[props.rowIndex].brand} options={brands}\r\n                    onChange={(e) => this.onEditorValueChange(props, e.value)} style={{width:'100%'}} placeholder=\"Select a City\"/>\r\n        );\r\n    }\r\n\r\n    colorEditor(props) {\r\n        return this.inputTextEditor(props, 'color');\r\n    }\r\n\r\n    requiredValidator(props) {\r\n        let value = props.rowData[props.field];\r\n        return value && value.length > 0;\r\n    }\r\n\r\n    /* Row Editing */\r\n    onEditorValueChangeForRowEditing(props, value) {\r\n        let updatedCars = [...props.value];\r\n        updatedCars[props.rowIndex][props.field] = value;\r\n        this.setState({cars2: updatedCars});\r\n    }\r\n\r\n    editorForRowEditing(props, field) {\r\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChangeForRowEditing(props, e.target.value)} />;\r\n    }\r\n\r\n    onRowEditorValidator(rowData) {\r\n        let value = rowData['brand'];\r\n        return value.length > 0;\r\n    }\r\n\r\n    onRowEditInit(event) {\r\n        this.clonedCars[event.data.vin] = {...event.data};\r\n    }\r\n\r\n    onRowEditSave(event) {\r\n        if (this.onRowEditorValidator(event.data)) {\r\n            delete this.clonedCars[event.data.vin];\r\n            this.growl.show({severity: 'success', summary: 'Success', detail: 'Car is updated'});\r\n        }\r\n        else {\r\n            this.growl.show({severity: 'error', summary: 'Error', detail: 'Brand is required'});\r\n        }\r\n    }\r\n\r\n    onRowEditCancel(event) {\r\n        let cars = [...this.state.cars2];\r\n        cars[event.index] = this.clonedCars[event.data.vin];\r\n        delete this.clonedCars[event.data.vin];\r\n        this.setState({\r\n            cars2: cars\r\n        })\r\n    }\r\n\r\n    render() {\r\n\t\t\tconsole.log(this.state.data)\t\r\n        return (\r\n            <div>\r\n                \t\t\t<Link href=\"/\">\r\n\t\t\t\t<a title=\"New Policy\">Create new policy</a>\r\n\t\t\t</Link>\r\n                <div className=\"content-section implementation\">\r\n                    <Growl ref={(el) => this.growl = el} />\r\n\r\n                    <h3>Cell Editing</h3>\r\n                    <DataTable value={this.state.data} editable={true}>\r\n                        <Column field=\"first_name\" header=\"first_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"last_name\" header=\"last_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"email_address\" header=\"email_address\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"phone_number\" header=\"phone_number\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"company_name\" header=\"company_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column \r\n                         field=\"effective_date\" header=\"effective_date\" editor={this.calendarEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                    </DataTable>\r\n\r\n                    {/* <h3>Row Editing</h3>\r\n                    <DataTable value={this.state.data} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\r\n                        <Column field=\"first_name\" header=\"first_name\" style={{height: '3.5em'}}/>\r\n                        <Column field=\"last_name\" header=\"last_name\" editor={(props) => this.editorForRowEditing(props, 'year')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"email_address\" header=\"email_address\" editor={(props) => this.editorForRowEditing(props, 'brand')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"phone_number\" header=\"phone_number\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"company_name\" header=\"company_name\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"effective_date\" header=\"effective_date\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"status\" header=\"status\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column rowEditor={true} style={{'width': '70px', 'textAlign': 'center'}}></Column>\r\n                    </DataTable> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardNX"]},"metadata":{},"sourceType":"module"}