{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitingcold\\\\Documents\\\\Development\\\\policy-crud\\\\pages\\\\dashboard-nx.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Growl } from 'primereact/growl';\nimport { Calendar } from 'primereact/calendar';\nimport Dashboard from './dashboard';\nimport axios from 'axios';\nimport moment from 'moment';\nconst baseUrl = 'http://127.0.0.1:4000/';\n\nclass DashboardNX extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"postData\", () => {\n      console.log(this.state.data);\n      axios.post(`${baseUrl}policies`, this.state.data).then(res => {\n        console.log(res);\n        console.log(111); //console.log(res.data);\n      });\n    });\n\n    this.state = {\n      data: []\n    };\n    this.textEditor = this.textEditor.bind(this);\n    this.dateTemplate = this.dateTemplate.bind(this);\n    this.calendarEditor = this.calendarEditor.bind(this);\n    this.yearEditor = this.yearEditor.bind(this);\n    this.brandEditor = this.brandEditor.bind(this);\n    this.colorEditor = this.colorEditor.bind(this);\n    this.requiredValidator = this.requiredValidator.bind(this);\n    this.editorForRowEditing = this.editorForRowEditing.bind(this);\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\n    this.onRowEditInit = this.onRowEditInit.bind(this);\n    this.onRowEditSave = this.onRowEditSave.bind(this);\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\n  }\n\n  async componentDidMount() {\n    const res = fetch(`${baseUrl}policies`).then(r => r.json()).then(data => this.setState({\n      data: data\n    }));\n  }\n  /* Cell Editing */\n\n\n  onEditorValueChange(props, value) {\n    let updatedData = [...props.value];\n    updatedData[props.rowIndex][props.field] = value;\n    this.setState({\n      data: updatedData\n    });\n  }\n\n  dateTemplate(rowData, column) {\n    return moment(rowData['effective_date']).format(\"MM-DD-YYYY\");\n  }\n\n  inputTextEditor(props, field) {\n    return __jsx(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChange(props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    });\n  }\n\n  textEditor(props) {\n    console.log(props);\n    this.postData();\n    return this.inputTextEditor(props, props.field);\n  }\n\n  calendarEditor(props, field) {\n    return __jsx(InputText, {\n      type: \"text\",\n      value: moment(props.rowData[field]).format(\"MM/DD/YYYY\"),\n      onChange: e => this.onEditorValueChange(props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    });\n  }\n\n  calEditor(props) {\n    return this.calendarEditor(props, props.field);\n  }\n\n  yearEditor(props) {\n    // console.log('fields->>>>>>',props.field)\n    return this.inputTextEditor(props, 'year');\n  }\n\n  brandEditor(props) {\n    let brands = [{\n      label: 'Audi',\n      value: 'Audi'\n    }, {\n      label: 'BMW',\n      value: 'BMW'\n    }, {\n      label: 'Fiat',\n      value: 'Fiat'\n    }, {\n      label: 'Ford',\n      value: 'Ford'\n    }, {\n      label: 'Honda',\n      value: 'Honda'\n    }, {\n      label: 'Jaguar',\n      value: 'Jaguar'\n    }, {\n      label: 'Mercedes',\n      value: 'Mercedes'\n    }, {\n      label: 'Renault',\n      value: 'Renault'\n    }, {\n      label: 'VW',\n      value: 'VW'\n    }, {\n      label: 'Volvo',\n      value: 'Volvo'\n    }];\n    return __jsx(Dropdown, {\n      value: props.value[props.rowIndex].brand,\n      options: brands,\n      onChange: e => this.onEditorValueChange(props, e.value),\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Select a City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    });\n  }\n\n  colorEditor(props) {\n    return this.inputTextEditor(props, 'color');\n  }\n\n  requiredValidator(props) {\n    let value = props.rowData[props.field];\n    return value && value.length > 0;\n  }\n  /* Row Editing */\n\n\n  onEditorValueChangeForRowEditing(props, value) {\n    let updatedCars = [...props.value];\n    updatedCars[props.rowIndex][props.field] = value;\n    this.setState({\n      cars2: updatedCars\n    });\n  }\n\n  editorForRowEditing(props, field) {\n    return __jsx(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChangeForRowEditing(props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 16\n      }\n    });\n  }\n\n  onRowEditorValidator(rowData) {\n    let value = rowData['brand'];\n    return value.length > 0;\n  }\n\n  onRowEditInit(event) {\n    this.clonedCars[event.data.vin] = _objectSpread({}, event.data);\n  }\n\n  onRowEditSave(event) {\n    if (this.onRowEditorValidator(event.data)) {\n      delete this.clonedCars[event.data.vin];\n      this.growl.show({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Car is updated'\n      });\n    } else {\n      this.growl.show({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Brand is required'\n      });\n    }\n  }\n\n  onRowEditCancel(event) {\n    let cars = [...this.state.cars2];\n    cars[event.index] = this.clonedCars[event.data.vin];\n    delete this.clonedCars[event.data.vin];\n    this.setState({\n      cars2: cars\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 20\n      }\n    }, __jsx(\"a\", {\n      title: \"New Policy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, \"Create new policy\")), __jsx(\"div\", {\n      className: \"content-section implementation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, __jsx(Growl, {\n      ref: el => this.growl = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Cell Editing\"), __jsx(DataTable, {\n      value: this.state.data,\n      editable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, __jsx(Column, {\n      field: \"first_name\",\n      header: \"first_name\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"last_name\",\n      header: \"last_name\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"email_address\",\n      header: \"email_address\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"phone_number\",\n      header: \"phone_number\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"company_name\",\n      header: \"company_name\",\n      editor: this.textEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"effective_date\",\n      body: this.dateTemplate,\n      header: \"effective_date\",\n      editor: this.calendarEditor,\n      editorValidator: this.requiredValidator,\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default DashboardNX;","map":{"version":3,"sources":["C:/Users/bitingcold/Documents/Development/policy-crud/pages/dashboard-nx.js"],"names":["Link","React","Component","fetch","DataTable","Column","InputText","Dropdown","Growl","Calendar","Dashboard","axios","moment","baseUrl","DashboardNX","constructor","console","log","state","data","post","then","res","textEditor","bind","dateTemplate","calendarEditor","yearEditor","brandEditor","colorEditor","requiredValidator","editorForRowEditing","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","componentDidMount","r","json","setState","onEditorValueChange","props","value","updatedData","rowIndex","field","rowData","column","format","inputTextEditor","e","target","postData","calEditor","brands","label","brand","width","length","onEditorValueChangeForRowEditing","updatedCars","cars2","event","clonedCars","vin","growl","show","severity","summary","detail","cars","index","render","el","height"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport React, { Component } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Growl} from 'primereact/growl';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport Dashboard from './dashboard';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nconst baseUrl = 'http://127.0.0.1:4000/';\r\n\r\nclass DashboardNX extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\t\t\t\t\tdata: []\r\n        };\r\n\t\t\t\r\n        this.textEditor = this.textEditor.bind(this);\r\n        this.dateTemplate = this.dateTemplate.bind(this);\r\n        this.calendarEditor = this.calendarEditor.bind(this);\r\n        this.yearEditor = this.yearEditor.bind(this);\r\n        this.brandEditor = this.brandEditor.bind(this);\r\n        this.colorEditor = this.colorEditor.bind(this);\r\n        this.requiredValidator = this.requiredValidator.bind(this);\r\n\r\n        this.editorForRowEditing = this.editorForRowEditing.bind(this);\r\n        this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n        this.onRowEditInit = this.onRowEditInit.bind(this);\r\n        this.onRowEditSave = this.onRowEditSave.bind(this);\r\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\t\tconst res = fetch(`${baseUrl}policies`).then( r => r.json() ).then(data => this.setState({data: data}));\r\n    }\r\n\r\n    /* Cell Editing */\r\n    onEditorValueChange(props, value) {\r\n        let updatedData = [...props.value];\r\n        updatedData[props.rowIndex][props.field] = value;\r\n        this.setState({data: updatedData});\r\n    }\r\n    dateTemplate(rowData, column) {\r\n        return moment(rowData['effective_date']).format(\"MM-DD-YYYY\");\r\n    }\r\n\r\n    inputTextEditor(props, field) {\r\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\r\n    }\r\n\r\n    textEditor(props) {\r\n\t\t\tconsole.log(props)\r\n\t\t\tthis.postData()\r\n      return this.inputTextEditor(props, props.field);\r\n\t}\r\n\t\t\r\n\t\tpostData = () => {\r\n\t\t\tconsole.log(this.state.data)\r\n\t\t\taxios.post(`${baseUrl}policies`, this.state.data)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(111);\r\n\t\t\t\t//console.log(res.data);\r\n\t\t\t})\r\n\t}\r\n\r\ncalendarEditor(props, field){\t\r\n    return <InputText type=\"text\" value={moment(props.rowData[field]).format(\"MM/DD/YYYY\")} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />\r\n}\r\ncalEditor(props) {\r\nreturn this.calendarEditor(props, props.field);\r\n}\r\n\r\nyearEditor(props) {\r\n        // console.log('fields->>>>>>',props.field)\r\n        return this.inputTextEditor(props, 'year');\r\n}\r\n\r\n\r\n    brandEditor(props) {\r\n        let brands = [\r\n            {label: 'Audi', value: 'Audi'},\r\n            {label: 'BMW', value: 'BMW'},\r\n            {label: 'Fiat', value: 'Fiat'},\r\n            {label: 'Ford', value: 'Ford'},\r\n            {label: 'Honda', value: 'Honda'},\r\n            {label: 'Jaguar', value: 'Jaguar'},\r\n            {label: 'Mercedes', value: 'Mercedes'},\r\n            {label: 'Renault', value: 'Renault'},\r\n            {label: 'VW', value: 'VW'},\r\n            {label: 'Volvo', value: 'Volvo'}\r\n        ];\r\n\r\n        return (\r\n            <Dropdown value={props.value[props.rowIndex].brand} options={brands}\r\n                    onChange={(e) => this.onEditorValueChange(props, e.value)} style={{width:'100%'}} placeholder=\"Select a City\"/>\r\n        );\r\n    }\r\n\r\n    colorEditor(props) {\r\n        return this.inputTextEditor(props, 'color');\r\n    }\r\n\r\n    requiredValidator(props) {\r\n        let value = props.rowData[props.field];\r\n        return value && value.length > 0;\r\n    }\r\n\r\n    /* Row Editing */\r\n    onEditorValueChangeForRowEditing(props, value) {\r\n        let updatedCars = [...props.value];\r\n        updatedCars[props.rowIndex][props.field] = value;\r\n        this.setState({cars2: updatedCars});\r\n    }\r\n\r\n    editorForRowEditing(props, field) {\r\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChangeForRowEditing(props, e.target.value)} />;\r\n    }\r\n\r\n    onRowEditorValidator(rowData) {\r\n        let value = rowData['brand'];\r\n        return value.length > 0;\r\n    }\r\n\r\n    onRowEditInit(event) {\r\n        this.clonedCars[event.data.vin] = {...event.data};\r\n    }\r\n\r\n    onRowEditSave(event) {\r\n        if (this.onRowEditorValidator(event.data)) {\r\n            delete this.clonedCars[event.data.vin];\r\n            this.growl.show({severity: 'success', summary: 'Success', detail: 'Car is updated'});\r\n        }\r\n        else {\r\n            this.growl.show({severity: 'error', summary: 'Error', detail: 'Brand is required'});\r\n        }\r\n    }\r\n\r\n    onRowEditCancel(event) {\r\n        let cars = [...this.state.cars2];\r\n        cars[event.index] = this.clonedCars[event.data.vin];\r\n        delete this.clonedCars[event.data.vin];\r\n        this.setState({\r\n            cars2: cars\r\n        })\r\n    }\r\n\r\n    render() {\r\n\t\t\tconsole.log(this.state.data)\t\r\n        return (\r\n            <div>\r\n                \t\t\t<Link href=\"/\">\r\n\t\t\t\t<a title=\"New Policy\">Create new policy</a>\r\n\t\t\t</Link>\r\n                <div className=\"content-section implementation\">\r\n                    <Growl ref={(el) => this.growl = el} />\r\n\r\n                    <h3>Cell Editing</h3>\r\n                    <DataTable value={this.state.data} editable={true}>\r\n                        <Column field=\"first_name\" header=\"first_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"last_name\" header=\"last_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"email_address\" header=\"email_address\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"phone_number\" header=\"phone_number\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"company_name\" header=\"company_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column \r\n                         field=\"effective_date\" body={this.dateTemplate} header=\"effective_date\" editor={this.calendarEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                    </DataTable>\r\n\r\n                    {/* <h3>Row Editing</h3>\r\n                    <DataTable value={this.state.data} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\r\n                        <Column field=\"first_name\" header=\"first_name\" style={{height: '3.5em'}}/>\r\n                        <Column field=\"last_name\" header=\"last_name\" editor={(props) => this.editorForRowEditing(props, 'year')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"email_address\" header=\"email_address\" editor={(props) => this.editorForRowEditing(props, 'brand')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"phone_number\" header=\"phone_number\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"company_name\" header=\"company_name\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"effective_date\" header=\"effective_date\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column field=\"status\" header=\"status\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\r\n                        <Column rowEditor={true} style={{'width': '70px', 'textAlign': 'center'}}></Column>\r\n                    </DataTable> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardNX"]},"metadata":{},"sourceType":"module"}