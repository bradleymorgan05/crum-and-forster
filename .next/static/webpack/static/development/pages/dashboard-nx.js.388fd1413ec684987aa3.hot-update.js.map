{"version":3,"file":"static/webpack/static\\development\\pages\\dashboard-nx.js.388fd1413ec684987aa3.hot-update.js","sources":["webpack:///./pages/dashboard-nx.js"],"sourcesContent":["import Link from 'next/link';\r\nimport React, { Component } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Growl} from 'primereact/growl';\r\nimport {Calendar} from 'primereact/calendar';\r\n// import Dashboard from './dashboard';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nconst baseUrl = 'http://127.0.0.1:4000/';\r\n\r\nclass DashboardNX extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\t\t\t\t\tdata: []\r\n        };\r\n\t\t\t\r\n        this.textEditor = this.textEditor.bind(this);\r\n        this.dateTemplate = this.dateTemplate.bind(this);\r\n        this.calendarEditor = this.calendarEditor.bind(this);\r\n        this.yearEditor = this.yearEditor.bind(this);\r\n        this.brandEditor = this.brandEditor.bind(this);\r\n        this.colorEditor = this.colorEditor.bind(this);\r\n        this.requiredValidator = this.requiredValidator.bind(this);\r\n\r\n        this.editorForRowEditing = this.editorForRowEditing.bind(this);\r\n        this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n        this.onRowEditInit = this.onRowEditInit.bind(this);\r\n        this.onRowEditSave = this.onRowEditSave.bind(this);\r\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\t\tconst res = fetch(`${baseUrl}policies`).then( r => r.json() ).then(data => this.setState({data: data}));\r\n    }\r\n\r\n    onEditorValueChange(props, value) {\r\n        let updatedData = [...props.value];\r\n        updatedData[props.rowIndex][props.field] = value;\r\n        this.setState({data: updatedData});\r\n    }\r\n    dateTemplate(rowData, column) {\r\n        return moment(rowData['effective_date']).format(\"MM-DD-YYYY\");\r\n    }\r\n\r\n    inputTextEditor(props, field) {\r\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\r\n    }\r\n\r\n    textEditor(props) {\r\n\t\t\tconsole.log(props)\r\n\t\t\tthis.postData()\r\n      return this.inputTextEditor(props, props.field);\r\n\t\t}\r\n\t\t\r\n\t\tpostData = () => {\r\n\t\t\t\tconsole.log(this.state.data)\r\n\t\t\t\taxios.post(`${baseUrl}policies`, this.state.data)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tconsole.log(111);\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tcalendarEditor(props, field){\t\r\n\t\t\t\treturn <InputText type=\"text\" value={moment(props.rowData[field]).format(\"MM/DD/YYYY\")} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />\r\n\t\t}\r\n\r\n    requiredValidator(props) {\r\n        let value = props.rowData[props.field];\r\n        return value && value.length > 0;\r\n    }\r\n\r\n    render() {\r\n\t\t\tconsole.log(this.state.data)\t\r\n        return (\r\n            <div>\r\n              <Link href=\"/\"><a title=\"New Policy\">Create new policy</a></Link>\r\n                <div className=\"content-section implementation\">\r\n                    <Growl ref={(el) => this.growl = el} />\r\n                    <DataTable value={this.state.data} editable={true}>\r\n                        <Column field=\"first_name\" header=\"first_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"last_name\" header=\"last_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"email_address\" header=\"email_address\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"phone_number\" header=\"phone_number\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column field=\"company_name\" header=\"company_name\" editor={this.textEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                        <Column \r\n                         field=\"effective_date\" body={this.dateTemplate} header=\"effective_date\" editor={this.calendarEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardNX"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA6CA;AACA;AAEA;AACA;AACA;AACA;AACA;AAlDA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAWA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAnFA;AACA;AAqFA;;;;;;;A","sourceRoot":""}