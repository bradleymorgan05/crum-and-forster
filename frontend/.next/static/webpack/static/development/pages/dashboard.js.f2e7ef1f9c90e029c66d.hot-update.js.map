{"version":3,"file":"static/webpack/static\\development\\pages\\dashboard.js.f2e7ef1f9c90e029c66d.hot-update.js","sources":["webpack:///./pages/dashboard.js"],"sourcesContent":["import Link from 'next/link';\r\nimport React, { useState } from 'react';\r\nimport { getPolicies, updatePolicy } from '../api/requestsHandler';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nvar moment = require('moment');\r\nconst baseUrl = 'http://127.0.0.1:3001';\r\n\r\nconst Dashboard = ({ data }) => {\r\n\tconst [ cell, setCell ] = useState({});\r\n\r\n\tconst requiredValidator = (props) => {\r\n\t\tlet value = props.rowData[props.field];\r\n\t\treturn value && value.length > 0;\r\n\t};\r\n\r\n\tconst onEditorValueChange = (props, value) => {\r\n\t\t//for field visually\r\n\t\tlet updatedData = [ ...props.value ];\r\n\t\tupdatedData[props.rowIndex][props.field] = value;\r\n\r\n\t\t//for server put/post\r\n\t\tconst id = props.rowData.id;\r\n\t\tconst newData = { [props.field]: value };\r\n\t\tsetCell(newData);\r\n\t\tupdatePolicy(id, newData).then((data) => {\r\n\t\t\tconsole.log(data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst dateTemplate = (rowData, column) => {\r\n\t\treturn moment(rowData['effective_date']).format('MM/DD/YYYY');\r\n\t};\r\n\r\n\tconst inputTextEditor = (props, field) => {\r\n\t\tconsole.log(props.rowData[field]);\r\n\t\treturn (\r\n\t\t\t<InputText\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={props.rowData[field]}\r\n\t\t\t\tonChange={(e) => onEditorValueChange(props, e.target.value)}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\tconst textEditor = (props) => {\r\n\t\treturn inputTextEditor(props, props.field);\r\n\t};\r\n\r\n\t//checkbox\r\n\tconst checkboxEditor = (props, field) => {\r\n\t\treturn <Checkbox onChange={(e) => onEditorValueChange(props, e.target.checked)} checked={props.rowData[field]} />;\r\n\t};\r\n\r\n\tconst checkEditor = (props) => {\r\n\t\treturn checkboxEditor(props, props.field);\r\n\t};\r\n\r\n\tconst checkboxTemplate = (rowData, column) => {\r\n\t\treturn <Checkbox checked={column.rowData[column.field]} />;\r\n\t};\r\n\r\n\t//dropdown\r\n\tconst dropdownCheckboxEditor = (props) => {\r\n\t\tlet opt = [ { label: 'Yes', value: true }, { label: 'No', value: false } ];\r\n\r\n\t\treturn (\r\n\t\t\t<Dropdown\r\n\t\t\t\tvalue={props.value[props.rowIndex][props.field]}\r\n\t\t\t\toptions={opt}\r\n\t\t\t\tonChange={(e) => onEditorValueChange(props, e.value)}\r\n\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\tplaceholder=\"Select primary_al\"\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\tconst dropdownCheckboxTemplate = (rowData, column) => {\r\n\t\tlet opt = [ { label: 'Yes', value: true }, { label: 'No', value: false } ];\r\n\r\n\t\treturn (\r\n\t\t\t<Dropdown\r\n\t\t\t\toptionLabel=\"label\"\r\n\t\t\t\toptionValue=\"value\"\r\n\t\t\t\tvalue={column.rowData[column.field]}\r\n\t\t\t\toptions={opt}\r\n\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\tplaceholder=\"Select primary_al\"\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<Link href=\"/\">\r\n\t\t\t\t\t<a>New Policy</a>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"content-section implementation\">\r\n\t\t\t\t<DataTable value={data} editable={true}>\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\tfield=\"first_name\"\r\n\t\t\t\t\t\theader=\"First Name\"\r\n\t\t\t\t\t\teditor={textEditor}\r\n\t\t\t\t\t\teditorValidator={requiredValidator}\r\n\t\t\t\t\t\tstyle={{ height: '3.5em' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Column field=\"ast_name\" header=\"Last Name\" style={{ height: '3.5em' }} />\r\n\t\t\t\t\t<Column field=\"email_address\" header=\"Email Address\" style={{ height: '3.5em' }} />\r\n\t\t\t\t\t<Column field=\"phone_number\" header=\"Phone Number\" style={{ height: '3.5em' }} />\r\n\t\t\t\t\t<Column field=\"company_name\" header=\"Company Name\" style={{ height: '3.5em' }} />\r\n\t\t\t\t\t<Column field=\"effective_date\" body={dateTemplate} header=\"effective_date\" style={{ height: '3.5em' }} />\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\tfield=\"primary_al\"\r\n\t\t\t\t\t\teditor={checkEditor}\r\n\t\t\t\t\t\tbody={checkboxTemplate}\r\n\t\t\t\t\t\theader=\"primary_al\"\r\n\t\t\t\t\t\tstyle={{ height: '3.5em' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\tfield=\"primary_al\"\r\n\t\t\t\t\t\tbody={dropdownCheckboxTemplate}\r\n\t\t\t\t\t\theader=\"primary_al\"\r\n\t\t\t\t\t\teditor={dropdownCheckboxEditor}\r\n\t\t\t\t\t\tstyle={{ height: '3.5em' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataTable>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport async function getServerSideProps() {\r\n\tconst data = await getPolicies();\r\n\treturn { props: { data } };\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;;AAMA;;;;A","sourceRoot":""}